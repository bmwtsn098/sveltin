<script lang="ts">
	import { base, assets } from '$app/paths';
	import type { PageData } from './$types';
	import type { SEOWebPageMetadata } from '@sveltinio/seo/types';
	import { page } from '$app/stores';
	import { website } from '$config/website.js';
	import { Card, CardAction, CardImage } from '@sveltinio/widgets';
	import { OpenGraphType, TwitterCardType } from '@sveltinio/seo/types';
	import { PageMetaTags, JsonLdWebPage, JsonLdBreadcrumbs } from '@sveltinio/seo';
	import { toTitle, getFavicon, getPageUrl } from '$lib/utils/strings.js';

	export let data: PageData;

	$: ({ resourceName, items } = data);
	$: postsIndexPage = <SEOWebPageMetadata>{
		url: getPageUrl(resourceName, website),
		title: website.name,
		description: 'Here you can find the list of all available posts.',
		keywords: website.keywords ? website.keywords : '',
		image: getFavicon(website),
		opengraph: {
			type: OpenGraphType.Website
		},
		twitter: {
			type: TwitterCardType.Summary
		}
	};
	$: pathname = $page.url.pathname.replace(/^(.)|(.)$/g, '');
</script>

<PageMetaTags data={postsIndexPage} />
<JsonLdWebPage data={postsIndexPage} />
<JsonLdBreadcrumbs
	baseURL={website.baseURL}
	parent={resourceName}
	current={postsIndexPage.title}
/>

<section>
	<div>
		{#if items.length != 0}
			<h1>{toTitle(resourceName)}</h1>
			{#each items as item}
				<Card
					title={item.metadata.title}
					content={item.metadata.headline}
					href="{base}/{item.resource}/{item.metadata.slug}"
				>
					<CardImage
						slot="cardImage"
						alt={item.metadata.title}
						src="{assets}/resources/{item.resource}/{item.metadata.slug}/{item.metadata.cover}"
					/>
					<CardAction slot="cardAction" href="{base}/{item.resource}/{item.metadata.slug}" />
				</Card>
			{/each}
		{:else}
			<h2 class="message message--warning">
				Nothing to show here! Create some content first and reload the page:
				<span
					><pre><code class="text-default">sveltin new content {pathname}/getting-started</code
						></pre></span
				>
			</h2>
		{/if}
	</div>
</section>
