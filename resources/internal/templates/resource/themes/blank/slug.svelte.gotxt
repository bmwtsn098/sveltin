<script lang="ts">
	import { base } from '$app/paths';
	import type { PageData } from './$types';
	import { website } from '$config/website.js';
	import { JsonLdWebPage, PageMetaTags, JsonLdBreadcrumbs } from '@sveltinio/seo';
	import { OpenGraphType, TwitterCardType } from '@sveltinio/seo/types';
	import { getCoverImagePath, getSlugPageUrl } from '$lib/utils/strings.js';
	import { TOC, PagesNavigator } from '@sveltinio/widgets';

	export let data: PageData;
	$: ({ actual, before, after, mdsvexComponent } = data);

	$: current = actual;
	$: previous = before;
	$: next = after;

	$: slugPageData = {
		url: getSlugPageUrl(current, website),
		title: current.metadata.title,
		description: current.metadata.headline,
		keywords: website.keywords ? website.keywords : '',
		author: current.metadata.author,
		image: getCoverImagePath(current, website),
		opengraph: {
			type: OpenGraphType.Article,
			article: {
				published_at: current.metadata.created_at,
				modified_at: current.metadata.updated_at
			}
		},
		twitter: {
			type: TwitterCardType.Summary
		}
	};
</script>

<PageMetaTags data={slugPageData} />
<JsonLdWebPage data={slugPageData} />
<JsonLdBreadcrumbs
	baseURL={website.baseURL}
	parent={current.resource}
	currentTitle={slugPageData.title}
/>

<article>
	<div style="padding: 20px">
		<h1>{current.metadata.title}</h1>
		<div>
			{#if current.metadata.created_at}
				<time datetime={current.metadata.created_at}>
					Created At {current.metadata.created_at}
				</time>
			{/if}
			{#if current.metadata.updated_at}
				<time datetime={current.metadata.updated_at}>
					Updated On {current.metadata.updated_at}
				</time>
			{/if}
			{#if current.metadata.readingTime}
				<p><span>{current.metadata.readingTime.text}</span></p>
			{/if}
		</div>
		{#if current.metadata.cover}
			<div>
				<img
					src="/resources/{current.resource}/{current.metadata.slug}/{current.metadata.cover}"
					alt="cover image for {current.metadata.title}"
				/>
			</div>
		{/if}
		<div>
			<TOC data={current.metadata.headings} />

			<div class="markdown-body">
				<svelte:component this={mdsvexComponent} />
			</div>
		</div>

		<PagesNavigator
			prev={ {
				label: previous.metadata.title,
				href: `${base}/${previous.resource}/${previous.metadata.slug}`,
				alt: `link to ${previous.metadata.title}`
			} }
			next={ {
				label: next.metadata.title,
				href: `${base}/${next.resource}/${next.metadata.slug}`,
				alt: `link to ${next.metadata.title}`
			} }
		/>
	</div>
</article>
