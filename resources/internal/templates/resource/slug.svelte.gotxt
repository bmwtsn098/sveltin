<script lang="ts">
	import type { PageData } from './$types';
	import type { IWebPageMetadata } from '@sveltinio/seo/types';
	import type { Sveltin } from 'src/sveltin';
	import { website } from '$config/website.js';
	import { TOC, PrevNextButtons } from '@sveltinio/widgets';
	import { JsonLdWebPage, PageMetaTags, JsonLdBreadcrumbs } from '@sveltinio/seo';
	import { OpenGraphType, TwitterCardType } from '@sveltinio/seo/types';
	import { getCoverImagePath, getSlugPageUrl } from '$lib/utils/strings.js';

	export let data: PageData;
	$: ({ actual, before, after, mdsvexComponent } = data);

	$: current = actual;
	$: previous = before;
	$: next = after;

	let slugPageData = {} as IWebPageMetadata;
	if (current) {
		slugPageData = {
			url: getSlugPageUrl(current, website),
			title: current.metadata.title,
			description: current.metadata.headline,
			keywords: website.keywords ? website.keywords : '',
			author: current.metadata.author,
			image: getCoverImagePath(current, website),
			opengraph: {
				type: OpenGraphType.Article,
				article: {
					published_at: current.metadata.created_at,
					modified_at: current.metadata.updated_at
				}
			},
			twitter: {
				type: TwitterCardType.Summary
			}
		};
	}
</script>

{#if current}
	<PageMetaTags data={slugPageData} />
	<JsonLdWebPage data={slugPageData} />
	<JsonLdBreadcrumbs
		baseURL={website.baseURL}
		parent={current.resource}
		currentTitle={slugPageData.title}
	/>

	<article class="artifact-container">
		<div class="content">
			<h1>{current.metadata.title}</h1>
			{#if current.metadata.created_at}
				<h3>
					<time datetime={new Date(current.metadata.created_at).toISOString()} />
				</h3>
			{/if}
			{#if current.metadata.cover}
				<div class="cover">
					<img
						src={`/resources/${current.resource}/${current.metadata.slug}/${current.metadata.cover}`}
						title={`cover for ${current.metadata.title}`}
						alt={`cover for ${current.metadata.title}`}
					/>
				</div>
			{/if}
			<div>
				<TOC
					resource={current.resource}
					slug={current.metadata.slug}
					headings={current.metadata.headings}
					withChildren={true}
				/>

				<div class="markdown-body">
					<svelte:component this={mdsvexComponent} />
				</div>
			</div>
			<PrevNextButtons {previous} {next} />
		</div>
	</article>
{/if}

<style>
	.cover {
		position: relative;
		padding-bottom: calc(9 / 16 * 100%);
		margin-bottom: 2rem;
	}

	.cover > * {
		position: absolute;
		height: 100%;
		width: 100%;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

	.cover img {
		object-fit: cover;
		border-radius: 0.75rem;
	}
</style>
